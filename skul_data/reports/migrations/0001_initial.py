# Generated by Django 5.1.7 on 2025-04-17 13:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('schools', '0003_school_code_school_level_school_superuser_profile_and_more'),
        ('students', '0003_subject_student_subjects'),
        ('users', '0003_permission_role_user_role'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicReportConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_generate_term_reports', models.BooleanField(default=True)),
                ('days_after_term_to_generate', models.PositiveIntegerField(default=3)),
                ('notify_parents_on_generation', models.BooleanField(default=True)),
                ('parent_access_expiry_days', models.PositiveIntegerField(default=30, help_text='How many days parents can access term reports')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='reports/%Y/%m/%d/')),
                ('file_format', models.CharField(blank=True, choices=[('PDF', 'PDF'), ('EXCEL', 'Excel'), ('HTML', 'HTML'), ('CSV', 'CSV')], max_length=10, null=True)),
                ('data', models.JSONField(help_text='JSON data used to generate the report')),
                ('parameters', models.JSONField(help_text='Parameters used to generate the report')),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('valid_until', models.DateTimeField(blank=True, null=True)),
                ('allowed_roles', models.ManyToManyField(blank=True, to='users.role')),
                ('allowed_users', models.ManyToManyField(blank=True, related_name='allowed_reports', to=settings.AUTH_USER_MODEL)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_reports', to=settings.AUTH_USER_MODEL)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('related_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='schools.schoolclass')),
                ('related_students', models.ManyToManyField(blank=True, to='students.student')),
                ('related_teachers', models.ManyToManyField(blank=True, to='users.teacher')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
            options={
                'ordering': ['-generated_at'],
                'permissions': [('bulk_generate_report', 'Can generate reports in bulk'), ('approve_report', 'Can approve reports')],
            },
        ),
        migrations.CreateModel(
            name='ReportAccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('VIEWED', 'Viewed'), ('DOWNLOADED', 'Downloaded'), ('SHARED', 'Shared')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('accessed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.generatedreport')),
            ],
            options={
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('method', models.CharField(choices=[('EMAIL', 'Email'), ('IN_APP', 'In-App'), ('BOTH', 'Both')], max_length=10)),
                ('message', models.TextField()),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.generatedreport')),
                ('sent_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('template_type', models.CharField(choices=[('ACADEMIC', 'Academic Performance'), ('ATTENDANCE', 'Attendance'), ('BEHAVIOR', 'Behavior'), ('PAYROLL', 'Payroll'), ('ENROLLMENT', 'Enrollment'), ('FINANCE', 'Finance'), ('CUSTOM', 'Custom')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('content', models.JSONField(help_text='JSON structure defining the report template')),
                ('is_system', models.BooleanField(default=False, help_text='System-wide template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
            ],
            options={
                'ordering': ['-is_system', 'name'],
                'unique_together': {('name', 'school')},
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('TERMLY', 'Termly'), ('YEARLY', 'Yearly'), ('CUSTOM', 'Custom')], max_length=10)),
                ('custom_cron', models.CharField(blank=True, help_text='Custom cron expression', max_length=100, null=True)),
                ('email_recipients', models.TextField(blank=True, help_text='Comma-separated email addresses', null=True)),
                ('parameters', models.JSONField(help_text='Parameters to use when generating the report')),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(blank=True, related_name='scheduled_reports', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schools.school')),
                ('report_template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.reporttemplate')),
            ],
            options={
                'ordering': ['next_run', 'name'],
            },
        ),
        migrations.AddField(
            model_name='generatedreport',
            name='report_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='reports.reporttemplate'),
        ),
        migrations.CreateModel(
            name='AcademicRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=20)),
                ('school_year', models.CharField(blank=True, max_length=20, null=True)),
                ('score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('grade', models.CharField(choices=[('A', 'Excellent (A)'), ('B', 'Good (B)'), ('C', 'Average (C)'), ('D', 'Below Average (D)'), ('E', 'Poor (E)'), ('F', 'Fail (F)')], max_length=1)),
                ('subject_comments', models.TextField(blank=True, help_text="Teacher's comments about performance in this specific subject", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=False, help_text='Whether this record is visible to parents')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_records', to='students.student')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='student_records', to='students.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taught_records', to='users.teacher')),
            ],
            options={
                'verbose_name': 'Academic Record',
                'verbose_name_plural': 'Academic Records',
                'ordering': ['term', 'subject__name'],
                'unique_together': {('student', 'subject', 'term', 'school_year')},
            },
        ),
        migrations.CreateModel(
            name='GeneratedReportAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('accessed_at', models.DateTimeField(blank=True, null=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_grants', to='reports.generatedreport')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_accesses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Generated report accesses',
                'unique_together': {('report', 'user')},
            },
        ),
        migrations.CreateModel(
            name='TeacherComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=20)),
                ('school_year', models.CharField(max_length=20)),
                ('comment_type', models.CharField(choices=[('GENERAL', 'General Comment'), ('STRENGTH', 'Key Strength'), ('IMPROVE', 'Area for Improvement'), ('RECOMMENDATION', 'Recommendation')], default='GENERAL', max_length=20)),
                ('content', models.TextField(help_text="Detailed comments about the student's performance")),
                ('is_approved', models.BooleanField(default=False, help_text='Whether the comment has been approved by administration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_comments', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_comments', to='students.student')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_comments', to='users.teacher')),
            ],
            options={
                'verbose_name': 'Teacher Comment',
                'verbose_name_plural': 'Teacher Comments',
                'ordering': ['-school_year', 'term', 'student'],
                'unique_together': {('student', 'teacher', 'term', 'school_year', 'comment_type')},
            },
        ),
        migrations.CreateModel(
            name='TermReportRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=50)),
                ('school_year', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], default='PENDING', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('generated_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='reports.generatedreport')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
            options={
                'unique_together': {('student', 'parent', 'term', 'school_year')},
            },
        ),
    ]
